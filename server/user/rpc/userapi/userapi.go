// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userapi

import (
	"context"

	"douniu/server/user/rpc/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommonResp                   = pb.CommonResp
	RegisterOrLoginByPasswordReq = pb.RegisterOrLoginByPasswordReq
	RegisterOrLoginByPhoneReq    = pb.RegisterOrLoginByPhoneReq
	RegisterOrLoginResp          = pb.RegisterOrLoginResp
	ResetPassword                = pb.ResetPassword
	SendVerificationCodeReq      = pb.SendVerificationCodeReq
	SendVerificationCodeResp     = pb.SendVerificationCodeResp
	TokenResp                    = pb.TokenResp
	UserInfoItem                 = pb.UserInfoItem
	UserInfoReq                  = pb.UserInfoReq
	UserInfoResp                 = pb.UserInfoResp

	UserApi interface {
		// 发送验证码
		SendVerificationCode(ctx context.Context, in *SendVerificationCodeReq, opts ...grpc.CallOption) (*SendVerificationCodeResp, error)
		// 使用验证码进行手机号注册或登录
		RegisterOrLoginByPhone(ctx context.Context, in *RegisterOrLoginByPhoneReq, opts ...grpc.CallOption) (*RegisterOrLoginResp, error)
		// 使用密码进行手机号注册或登录
		RegisterOrLoginByPassword(ctx context.Context, in *RegisterOrLoginByPasswordReq, opts ...grpc.CallOption) (*RegisterOrLoginResp, error)
		// 忘记密码并重置密码
		ForgetPassword(ctx context.Context, in *ResetPassword, opts ...grpc.CallOption) (*CommonResp, error)
		// 修改密码
		ChangePassword(ctx context.Context, in *ResetPassword, opts ...grpc.CallOption) (*CommonResp, error)
		// 获取用户信息
		GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
	}

	defaultUserApi struct {
		cli zrpc.Client
	}
)

func NewUserApi(cli zrpc.Client) UserApi {
	return &defaultUserApi{
		cli: cli,
	}
}

// 发送验证码
func (m *defaultUserApi) SendVerificationCode(ctx context.Context, in *SendVerificationCodeReq, opts ...grpc.CallOption) (*SendVerificationCodeResp, error) {
	client := pb.NewUserApiClient(m.cli.Conn())
	return client.SendVerificationCode(ctx, in, opts...)
}

// 使用验证码进行手机号注册或登录
func (m *defaultUserApi) RegisterOrLoginByPhone(ctx context.Context, in *RegisterOrLoginByPhoneReq, opts ...grpc.CallOption) (*RegisterOrLoginResp, error) {
	client := pb.NewUserApiClient(m.cli.Conn())
	return client.RegisterOrLoginByPhone(ctx, in, opts...)
}

// 使用密码进行手机号注册或登录
func (m *defaultUserApi) RegisterOrLoginByPassword(ctx context.Context, in *RegisterOrLoginByPasswordReq, opts ...grpc.CallOption) (*RegisterOrLoginResp, error) {
	client := pb.NewUserApiClient(m.cli.Conn())
	return client.RegisterOrLoginByPassword(ctx, in, opts...)
}

// 忘记密码并重置密码
func (m *defaultUserApi) ForgetPassword(ctx context.Context, in *ResetPassword, opts ...grpc.CallOption) (*CommonResp, error) {
	client := pb.NewUserApiClient(m.cli.Conn())
	return client.ForgetPassword(ctx, in, opts...)
}

// 修改密码
func (m *defaultUserApi) ChangePassword(ctx context.Context, in *ResetPassword, opts ...grpc.CallOption) (*CommonResp, error) {
	client := pb.NewUserApiClient(m.cli.Conn())
	return client.ChangePassword(ctx, in, opts...)
}

// 获取用户信息
func (m *defaultUserApi) GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := pb.NewUserApiClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}
