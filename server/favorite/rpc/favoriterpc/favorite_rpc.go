// Code generated by goctl. DO NOT EDIT.
// Source: favorite.proto

package favoriterpc

import (
	"context"

	"douniu/server/favorite/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddFavoriteRequest             = pb.AddFavoriteRequest
	AddFavoriteResponse            = pb.AddFavoriteResponse
	DelFavoriteRequest             = pb.DelFavoriteRequest
	DelFavoriteResponse            = pb.DelFavoriteResponse
	GetFavoriteVideoIdListRequest  = pb.GetFavoriteVideoIdListRequest
	GetFavoriteVideoListIdResponse = pb.GetFavoriteVideoListIdResponse
	GetUserFavoriteCountRequest    = pb.GetUserFavoriteCountRequest
	GetUserFavoriteCountResponse   = pb.GetUserFavoriteCountResponse
	GetUserFavoritedCountRequest   = pb.GetUserFavoritedCountRequest
	GetUserFavoritedCountResponse  = pb.GetUserFavoritedCountResponse
	GetVideoFavoriteCountRequest   = pb.GetVideoFavoriteCountRequest
	GetVideoFavoriteCountResponse  = pb.GetVideoFavoriteCountResponse
	IsFavoriteRequest              = pb.IsFavoriteRequest
	IsFavoriteResponse             = pb.IsFavoriteResponse

	FavoriteRpc interface {
		AddFavorite(ctx context.Context, in *AddFavoriteRequest, opts ...grpc.CallOption) (*AddFavoriteResponse, error)
		DelFavorite(ctx context.Context, in *DelFavoriteRequest, opts ...grpc.CallOption) (*DelFavoriteResponse, error)
		GetVideoFavoriteCount(ctx context.Context, in *GetVideoFavoriteCountRequest, opts ...grpc.CallOption) (*GetVideoFavoriteCountResponse, error)
		GetUserFavoriteCount(ctx context.Context, in *GetUserFavoriteCountRequest, opts ...grpc.CallOption) (*GetUserFavoriteCountResponse, error)
		GetUserFavoritedCount(ctx context.Context, in *GetUserFavoritedCountRequest, opts ...grpc.CallOption) (*GetUserFavoritedCountResponse, error)
		IsFavorite(ctx context.Context, in *IsFavoriteRequest, opts ...grpc.CallOption) (*IsFavoriteResponse, error)
		GetFavoriteVideoIdList(ctx context.Context, in *GetFavoriteVideoIdListRequest, opts ...grpc.CallOption) (*GetFavoriteVideoListIdResponse, error)
	}

	defaultFavoriteRpc struct {
		cli zrpc.Client
	}
)

func NewFavoriteRpc(cli zrpc.Client) FavoriteRpc {
	return &defaultFavoriteRpc{
		cli: cli,
	}
}

func (m *defaultFavoriteRpc) AddFavorite(ctx context.Context, in *AddFavoriteRequest, opts ...grpc.CallOption) (*AddFavoriteResponse, error) {
	client := pb.NewFavoriteRpcClient(m.cli.Conn())
	return client.AddFavorite(ctx, in, opts...)
}

func (m *defaultFavoriteRpc) DelFavorite(ctx context.Context, in *DelFavoriteRequest, opts ...grpc.CallOption) (*DelFavoriteResponse, error) {
	client := pb.NewFavoriteRpcClient(m.cli.Conn())
	return client.DelFavorite(ctx, in, opts...)
}

func (m *defaultFavoriteRpc) GetVideoFavoriteCount(ctx context.Context, in *GetVideoFavoriteCountRequest, opts ...grpc.CallOption) (*GetVideoFavoriteCountResponse, error) {
	client := pb.NewFavoriteRpcClient(m.cli.Conn())
	return client.GetVideoFavoriteCount(ctx, in, opts...)
}

func (m *defaultFavoriteRpc) GetUserFavoriteCount(ctx context.Context, in *GetUserFavoriteCountRequest, opts ...grpc.CallOption) (*GetUserFavoriteCountResponse, error) {
	client := pb.NewFavoriteRpcClient(m.cli.Conn())
	return client.GetUserFavoriteCount(ctx, in, opts...)
}

func (m *defaultFavoriteRpc) GetUserFavoritedCount(ctx context.Context, in *GetUserFavoritedCountRequest, opts ...grpc.CallOption) (*GetUserFavoritedCountResponse, error) {
	client := pb.NewFavoriteRpcClient(m.cli.Conn())
	return client.GetUserFavoritedCount(ctx, in, opts...)
}

func (m *defaultFavoriteRpc) IsFavorite(ctx context.Context, in *IsFavoriteRequest, opts ...grpc.CallOption) (*IsFavoriteResponse, error) {
	client := pb.NewFavoriteRpcClient(m.cli.Conn())
	return client.IsFavorite(ctx, in, opts...)
}

func (m *defaultFavoriteRpc) GetFavoriteVideoIdList(ctx context.Context, in *GetFavoriteVideoIdListRequest, opts ...grpc.CallOption) (*GetFavoriteVideoListIdResponse, error) {
	client := pb.NewFavoriteRpcClient(m.cli.Conn())
	return client.GetFavoriteVideoIdList(ctx, in, opts...)
}
