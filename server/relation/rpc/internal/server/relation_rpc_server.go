// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package server

import (
	"context"

	"douniu/server/relation/rpc/internal/logic"
	"douniu/server/relation/rpc/internal/svc"
	"douniu/server/relation/rpc/pb"
)

type RelationRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedRelationRpcServer
}

func NewRelationRpcServer(svcCtx *svc.ServiceContext) *RelationRpcServer {
	return &RelationRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *RelationRpcServer) FollowAction(ctx context.Context, in *pb.FollowActionRequest) (*pb.FollowActionResponse, error) {
	l := logic.NewFollowActionLogic(ctx, s.svcCtx)
	return l.FollowAction(in)
}

func (s *RelationRpcServer) GetFollowList(ctx context.Context, in *pb.GetFollowListRequest) (*pb.GetFollowListResponse, error) {
	l := logic.NewGetFollowListLogic(ctx, s.svcCtx)
	return l.GetFollowList(in)
}

func (s *RelationRpcServer) GetFollowerList(ctx context.Context, in *pb.GetFollowerListRequest) (*pb.GetFollowerListResponse, error) {
	l := logic.NewGetFollowerListLogic(ctx, s.svcCtx)
	return l.GetFollowerList(in)
}

func (s *RelationRpcServer) GetUserFollowCount(ctx context.Context, in *pb.GetUserFollowCountRequest) (*pb.GetUserFollowCountResponse, error) {
	l := logic.NewGetUserFollowCountLogic(ctx, s.svcCtx)
	return l.GetUserFollowCount(in)
}

func (s *RelationRpcServer) GetUserFollowerCount(ctx context.Context, in *pb.GetUserFollowerCountRequest) (*pb.GetUserFollowerCountResponse, error) {
	l := logic.NewGetUserFollowerCountLogic(ctx, s.svcCtx)
	return l.GetUserFollowerCount(in)
}

func (s *RelationRpcServer) GetFriendList(ctx context.Context, in *pb.GetFriendListRequest) (*pb.GetFriendListResponse, error) {
	l := logic.NewGetFriendListLogic(ctx, s.svcCtx)
	return l.GetFriendList(in)
}

func (s *RelationRpcServer) IsFollow(ctx context.Context, in *pb.IsFollowRequest) (*pb.IsFollowResponse, error) {
	l := logic.NewIsFollowLogic(ctx, s.svcCtx)
	return l.IsFollow(in)
}
