syntax = "v1"  // 版本号

// 接口信息
info(
    title: "douniu/user.api"
    author: "liuxian"
    version: "1.0.0"
)
type (
    // 发验证码
    SendVerificationCodeReq {
        Phone string `json:"phone" validate:"required,phone"`
    }
    SendVerificationCodeResp{
        VerificationCode string `json:"verification_code"`
    }

        // 手机号注册/登陆
    RegisterOrLoginByPhoneReq {
        Phone string `json:"phone" validate:"required,phone"`
        VerificationCode string `json:"verification_code"`
    }
    RegisterOrLoginResp {
        UserId int64 `json:"user_id"`
        Token string `json:token"`
    }
        // 手机号,密码登录
    RegisterOrLoginByPasswordReq {
        Phone string `json:"phone" validate:"required"` // 手机号
        PassWord string `json:"password"`               // 用户密码，MD5加密
    }
        // 查询用户信息
    userInfoReq {
        UserId int64 `json:"user_id"` // 用户id
    }

    UserInfoResp {
        UserInfo *UserInfoItem `json:"userinfo"`
    }

    UserInfoItem {
        ID            int64  `json:"id"`
        Username      string `json:"username"`
        Password      string `json:"password"`
        Avatar        string `json:"avatar"`
        BackgroundImage string `json:"background_image"`
        Signature      string `json:"signature"`
    }

)

@server(
    prefix: account
)
service user-api {
    @doc(
        summary: "发验证码"
    )
    @handler Sendcode
    post /sendcode (SendVerificationCodeReq) returns (SendVerificationCodeResp)

    @doc(
        summary: "用户验证码形式注册/登陆"
    )
    @handler Register
    post /register (RegisterOrLoginByPhoneReq) returns (RegisterOrLoginResp )

    @doc(
        summary: "用户密码形式登录"
    )
    @handler Login
    post /login (RegisterOrLoginByPasswordReq) returns (RegisterOrLoginResp )

}

@server(
    middleware: JWT // 路由中间件声明
    prefix: account
)
service user-api {
    @doc(
        summary: "用户信息"
    )
    @handler userInfo
    post /userinfo (userInfoReq) returns (UserInfoResp)
}