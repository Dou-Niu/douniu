// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videorpc

import (
	"context"

	"douniu/server/video/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetAuthorIdReq  = pb.GetAuthorIdReq
	GetAuthorIdResp = pb.GetAuthorIdResp

	VideoRpc interface {
		GetAuthorId(ctx context.Context, in *GetAuthorIdReq, opts ...grpc.CallOption) (*GetAuthorIdResp, error)
	}

	defaultVideoRpc struct {
		cli zrpc.Client
	}
)

func NewVideoRpc(cli zrpc.Client) VideoRpc {
	return &defaultVideoRpc{
		cli: cli,
	}
}

func (m *defaultVideoRpc) GetAuthorId(ctx context.Context, in *GetAuthorIdReq, opts ...grpc.CallOption) (*GetAuthorIdResp, error) {
	client := pb.NewVideoRpcClient(m.cli.Conn())
	return client.GetAuthorId(ctx, in, opts...)
}
